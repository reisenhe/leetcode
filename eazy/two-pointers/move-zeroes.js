// 283. 移动零
// https://leetcode.cn/problems/move-zeroes/

// 给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

// 请注意 ，必须在不复制数组的情况下原地对数组进行操作。

//  

// 示例 1:

// 输入: nums = [0,1,0,3,12]
// 输出: [1,3,12,0,0]
// 示例 2:

// 输入: nums = [0]
// 输出: [0]
//  

// 提示:

// 1 <= nums.length <= 104
// -231 <= nums[i] <= 231 - 1

// 思路: 双指针
/**
 * 1. 第一个指针出发，找不是0的数字 [(j)>0, 0, (i)>1, 3, 0, 12]
 * 2. 找到数字后，将数字放到第二个指针的位置，第二个指针继续移动 [1, (j)>0, 1, (i)>3, 0, 12]
 * 3. 第一个指针继续，直到末尾 [1, 3, (j)>1, 3, 0, (i)>12]  [1, 3, 12, (j)>3, 0, (i)>12] 
 * 4. 第二个指针出发，将剩下的元素全替换成0 [1, 3, 12, >0, >0, (j)>0] 
 */

var moveZeroes = function (nums) {
  if (nums.length === 1) return nums;
  let j = 0;
  for (let i = 0; i < nums.length; i++) {
    if (nums[i] !== 0) {
      nums[j++] = nums[i];
    }
  }
  for (let i = j; i < nums.length; i++) {
    nums[i] = 0
  }
  return nums;
};